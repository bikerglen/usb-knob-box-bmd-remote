C51 COMPILER V9.60.0.0   IDLE                                                              04/23/2021 07:39:26 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE IDLE
OBJECT MODULE PLACED IN .\src\idle.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\glen\Si
                    -mplicityStudio\v4_workspace\EFM8UB2_HID_VendorDefined_Knobs_01\src\idle.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNI
                    -NGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\glen\SimplicityStudio\v4_workspa
                    -ce\EFM8UB2_HID_VendorDefined_Knobs_01\inc;C:\Users\glen\SimplicityStudio\v4_workspace\EFM8UB2_HID_VendorDefined_Knobs_01
                    -\inc\config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//kits/EFM8UB2_SLSTK2001A/config;C:/SiliconLabs
                    -/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Lib/efm8_assert;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/
                    -v4.1.7//Lib/efm8_usb/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/EFM8UB2/peripheral_driver
                    -/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//kits/common/bsp;C:/SiliconLabs/SimplicityStudio/v4/d
                    -eveloper/sdks/8051/v4.1.7//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Devic
                    -e/EFM8UB2/inc) REGFILE(EFM8UB2_HID_VendorDefined_Knobs_01.ORC) PRINT(.\src\idle.lst) COND PAGEWIDTH(120) PAGELENGTH(65) 
                    -OBJECT(.\src\idle.OBJ)

line level    source

   1          /**************************************************************************//**
   2           * Copyright (c) 2015 by Silicon Laboratories Inc. All rights reserved.
   3           *
   4           * http://developer.silabs.com/legal/version/v11/Silicon_Labs_Software_License_Agreement.txt
   5           *****************************************************************************/
   6          
   7          #include "si_toolchain.h"
   8          #include "idle.h"
   9          
  10          // ----------------------------------------------------------------------------
  11          // Variables
  12          // ----------------------------------------------------------------------------
  13          static idleTimer_TypeDef idle;
  14          
  15          // ----------------------------------------------------------------------------
  16          // Functions
  17          // ----------------------------------------------------------------------------
  18          
  19          void idleTimerStart(void)
  20          {
  21   1        if (idle.rate > 0)
  22   1        {
  23   2          idle.timer = idle.rate * 4;
  24   2        }
  25   1        else
  26   1        {
  27   2          idle.timer = POLL_RATE;
  28   2        }
  29   1      }
  30          
  31          bool isIdleTimerIndefinite(void)
  32          {
  33   1        if (idle.rate == 0)
  34   1        {
  35   2          return 1;
  36   2        }
  37   1        else
  38   1        {
  39   2          return 0;
  40   2        }
  41   1      }
  42          bool isIdleTimerExpired(void)
  43          {
  44   1        if (idle.timer == 0)
  45   1        {
  46   2          idleTimerStart();
C51 COMPILER V9.60.0.0   IDLE                                                              04/23/2021 07:39:26 PAGE 2   

  47   2          return 1;
  48   2        }
  49   1        return 0;
  50   1      }
  51          
  52          void idleTimerSet(uint8_t rate)
  53          {
  54   1        if ((rate != 0) && (rate < (POLL_RATE / 4)))
  55   1        {
  56   2          idle.rate = POLL_RATE / 4;
  57   2        }
  58   1        else
  59   1        {
  60   2          idle.rate = rate;
  61   2        }
  62   1      
  63   1        idleTimerStart();
  64   1      }
  65          
  66          void idleTimerTick(void)
  67          {
  68   1        if (idle.timer > 0)
  69   1        {
  70   2          idle.timer--;
  71   2        }
  72   1      }
  73          
  74          uint8_t idleGetRate(void)
  75          {
  76   1        return idle.rate;
  77   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     95    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
